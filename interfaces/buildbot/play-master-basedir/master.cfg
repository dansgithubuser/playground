#imports
from buildbot.plugins import buildslave, changes, schedulers, util, steps
from buildbot.status import html
from buildbot.status.web import authz

#constants
repo='playground'
repo_url='git://github.com/dansgithubuser/playground.git'
git_step_workdir='git-step-workdir'
slave_name='play-slave'
builder_name='play-builder'
http_port=8010

#factory
factory=util.BuildFactory()
factory.addStep(steps.Git(repourl=repo_url, codebase=repo, workdir=git_step_workdir))
factory.addStep(steps.ShellCommand(command=['python', 'buildbot/log_time.py'], workdir=git_step_workdir))

#config
BuildmasterConfig={
	'slaves': [buildslave.BuildSlave(slave_name, 'password')],
	'protocols': {'pb': {'port': 9989}},
	'codebaseGenerator': lambda x: repo,
	'schedulers':[
		schedulers.Periodic(
			name='play-15',
			builderNames=[builder_name],
			periodicBuildTimer=15,
			codebases={repo: {'repository': repo_url}}
		),
		schedulers.Periodic(
			name='play-30',
			builderNames=[builder_name],
			periodicBuildTimer=30,
			codebases={repo: {'repository': repo_url, 'branch': 'nonexistent-branch'}}
		),
		schedulers.ForceScheduler(
			name='force',
			builderNames=[builder_name],
			codebases={repo: {'repository': repo_url}}
		)
	],
	'builders': [util.BuilderConfig(
		name=builder_name,
		slavenames=[slave_name],
		factory=factory
	)],
	'status': [html.WebStatus(http_port=http_port, authz=authz.Authz(
		gracefulShutdown=True,
		forceBuild=True,
		forceAllBuilds=True,
		pingBuilder=True,
		stopBuild=True,
		stopAllBuilds=True,
		cancelPendingBuild=True
	))],
	'title': 'play',
	'titleURL': 'https://github.com/dansgithubuser/playground',
	'buildbotURL': 'http://localhost:{0}/'.format(http_port),
	'db': {'db_url': 'sqlite:///state.sqlite'}
}
