:w -- write to file
:q -- quit
:q! -- quit without writing
:wq -- write and quit

i -- enter insert mode
esc -- exit mode
I -- insert at beginning of line
A -- insert at end of line

r -- replace one character
R -- enter replace mode

h, j, k, l -- move by character
w, b -- move by word
W, B -- move to space
0, $ -- move to beginning, end of line
gg, G -- move to beginning, end of file
:<n> -- move to <n>th line of file
ctrl-U, ctrl-D -- move by half-page
ctrl-Y, ctrl-E -- move screen by line
H, M, L -- move cursor to top, middle, low line of screen
zt, zz, zb -- move screen so current line is in top, middle, or bottom of screen
ctrl-G -- show info about cursor position, including column number
m<c> -- set bookmark <c>
`<c> -- go to bookmark <c>

x -- delete
X -- backspace
D -- delete to end of line
dd -- delete line
J -- join lines

yy -- yank line
p -- put line
"+yy -- yank line to clipboard (" means register, + is clipboard register, yy is command)

/<regex> -- search for <regex>
:s/<pattern>/<replacement> -- replace <pattern> with <replacement> on current line
:%s/<pattern>/<replacement>/gc -- replace all <pattern> with <replacement> on each line, ask for confirmation

on regexes:
	- groups are done with parens, but you need to escape them with \
		- example: `:%s/\(\S*\)\ =\ EXCLUDED./\1\ =\ EXCLUDED.\1/gc`

u -- undo
ctrl-R -- redo
. -- repeat last edit
@: -- repeat last command
q: -- interactive command history

v -- visual selection
V -- visual selection by line
D -- delete selection

:echo has('visualextra')
ctrl-v -- block selection
I -- insert, edit one line, hit esc, changes should propagate to other lines (UI might not update)
c -- change block selection

q<letter><commands>q -- record macro
@<letter> -- play macro
@@ -- play last macro
